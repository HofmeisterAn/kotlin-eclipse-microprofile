buildscript {
	repositories { jcenter() }
	dependencies {
		classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:${project.'kotlin.version'}"
		classpath "com.github.ben-manes:gradle-versions-plugin:${project.'gradle.versions'}"
		classpath "com.diffplug.spotless:spotless-plugin-gradle:${project.'spotless.version'}"
	}
}

configure(subprojects.findAll { it.name != 'frontend' }) {
	apply plugin: 'war'
	apply plugin: 'kotlin'
	apply plugin: 'com.github.ben-manes.versions'
	apply plugin: 'com.diffplug.gradle.spotless'

	sourceCompatibility = 1.8
	targetCompatibility = 1.8

	repositories { jcenter() }

	dependencies {
  	// Kotlin
  	implementation "org.jetbrains.kotlin:kotlin-stdlib:${project.'kotlin.version'}"

		// JUnit
		testImplementation "junit:junit:${project.'junit4.version'}"
		testImplementation "org.junit.jupiter:junit-jupiter-params:${project.'junit5.version'}"
		testImplementation "org.junit.jupiter:junit-jupiter-api:${project.'junit5.version'}"
		testRuntimeOnly "org.junit.vintage:junit-vintage-engine:${project.'junit5.version'}"
		testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:${project.'junit5.version'}"
	}

	test {
  	testLogging { showStandardStreams = true }
  	useJUnitPlatform { includeEngines 'junit-jupiter', 'junit-vintage' }
	}

	spotless {
		groovyGradle {
			target '*.gradle'
			greclipse()
			indentWithSpaces(2)
			endWithNewline()
			paddedCell()
		}
		kotlin {
			ktlint().userData([
				'indent_size' : '2',
				'continuation_indent_size': '2',
				'insert_final_newline' : 'true',
				'max_line_length' : 'off'
			])
		}
	}
}
