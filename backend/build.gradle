sourceSets {
  main {
    kotlin { srcDirs += 'src/main/kotlin' }
    java { srcDirs += 'src/main/java' }
    resources { srcDirs += 'src/main/resources' }
  }
  test {
    kotlin { srcDirs += 'src/test/kotlin' }
    java { srcDirs += 'src/test/java' }
    resources {
      srcDirs += [
        'src/test/resources',
        'src/test/resources-payara-micro-managed'
      ]
    }
  }
}

dependencies {
  // Application
  implementation 'javax.ejb:javax.ejb-api:3.2.2'
  implementation 'org.eclipse.microprofile:microprofile:1.3'
  implementation 'org.hibernate:hibernate-core:5.3.4.Final'
  implementation 'com.h2database:h2:1.4.197'

  // Arquillian
  testImplementation 'org.jboss.shrinkwrap.resolver:shrinkwrap-resolver-impl-gradle:3.1.3'
  testImplementation 'org.jboss.shrinkwrap.resolver:shrinkwrap-resolver-gradle-depchain:3.1.3'
  testImplementation 'org.jboss.arquillian:arquillian-bom:1.4.0.Final'
  testImplementation 'org.jboss.arquillian.junit:arquillian-junit-container:1.4.0.Final'

  // Arquillian Payara
  testImplementation 'fish.payara.arquillian:arquillian-payara-micro-5-managed:1.0.Beta3'
}

def payaraMicroJar = 'payara-micro-5.183-20180810.000318-70.jar'

/**
 * Copies the front end assets to webapp.
 */
task copyFrontendAssets(type: Copy) {
  from "$project.rootDir/frontend/dist"
  into 'src/main/webapp'
}

/**
 * Starts the MicroProfile web app on Payara micro.
 */
task run(type: JavaExec, dependsOn: [copyFrontendAssets, war]) {
  main = '-jar'

  jvmArgs = [
    '-Xdebug',
    '-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5005'
  ]

  args = [
    payaraMicroJar,
    '--deploy',
    war.archivePath
  ]
}

/**
 * Runs the Arquillian tests based on Payara micro.
 */
task payaraMicroManagedTest(type: Test) {
  classpath = sourceSets.main.output + sourceSets.test.output

  systemProperties = [
    'arquillian.launch': 'payara-micro-managed'
  ]
}
